{"version":3,"sources":["../src/query_ctrl.js"],"names":["IronDbCheckQueryCtrl","$scope","$injector","scope","target","kind","type","alias","extend","query","datasource","metricFindQuery","then","metrics","sort","result","text","push","value","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;IAEaA,oB;;;;;AAEX,gCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA;;AAC9B,8FAAMD,MAAN,EAAcC,SAAd;AAEA,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYC,IAAZ,GAAqB,MAAKD,MAAL,CAAYC,IAAZ,IAAsB,SAA3C;AACA,UAAKD,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,EAA3C;AACA,UAAKA,MAAL,CAAYE,IAAZ,GAAqB,MAAKF,MAAL,CAAYE,IAAZ,IAAsB,SAA3C;AACA,UAAKF,MAAL,CAAYG,KAAZ,GAAqB,MAAKH,MAAL,CAAYG,KAAZ,IAAsB,EAA3C;AACA,UAAKH,MAAL,CAAYI,MAAZ,GAAqB,MAAKJ,MAAL,CAAYI,MAAZ,IAAsB,IAA3C;AAR8B;AAS/B;;;;+BAEUC,K,EAAO;AAChB,aAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCF,KAAhC,EAAuC,KAAKL,MAAL,CAAYC,IAAnD,EACJO,IADI,CACC,UAACC,OAAD,EAAa;AACjBA,QAAAA,OAAO,GAAGA,OAAO,CAACC,IAAR,EAAV;AACA,YAAIC,MAAM,GAAG,EAAb;AAFiB;AAAA;AAAA;;AAAA;AAGjB,+BAAiBF,OAAjB;AAAA,gBAASG,IAAT;AAA0BD,YAAAA,MAAM,CAACE,IAAP,CAAY;AAAED,cAAAA,IAAI,EAAJA,IAAF;AAAQE,cAAAA,KAAK,EAAEF;AAAf,aAAZ;AAA1B;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIjB,eAAOD,MAAP;AACD,OANI,CAAP;AAOD;;;mCAEc;AACb,WAAKX,MAAL,CAAYA,MAAZ,GAAqB,EAArB;AACA,WAAKe,OAAL;AACD;;;;EA1BuCC,c;;;AA6B1CpB,oBAAoB,CAACqB,WAArB,GAAmC,4BAAnC","sourcesContent":["import { QueryCtrl}  from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class IronDbCheckQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.kind   = this.target.kind   || 'numeric';\n    this.target.target = this.target.target || '';\n    this.target.type   = this.target.type   || 'average';\n    this.target.alias  = this.target.alias  || '';\n    this.target.extend = this.target.extend || true;\n  }\n\n  getOptions(query) {\n    return this.datasource.metricFindQuery(query, this.target.kind)\n      .then((metrics) => {\n        metrics = metrics.sort();\n        let result = [];\n        for (let text of metrics) result.push({ text, value: text });\n        return result;\n      });\n  }\n\n  onChangeKind() {\n    this.target.target = '';\n    this.refresh();\n  }\n}\n\nIronDbCheckQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"],"file":"query_ctrl.js"}