{"version":3,"sources":["../src/query_ctrl.js"],"names":["IronDbCheckQueryCtrl","$scope","$injector","scope","target","kind","type","alias","extend","query","datasource","metricFindQuery","then","metrics","sort","result","text","push","value","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;IAEaA,oB;;;;;AACX,gCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA;;AAC7B,8FAAMD,MAAN,EAAcC,SAAd;AAEA,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,SAAvC;AACA,UAAKD,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,EAA3C;AACA,UAAKA,MAAL,CAAYE,IAAZ,GAAmB,MAAKF,MAAL,CAAYE,IAAZ,IAAoB,SAAvC;AACA,UAAKF,MAAL,CAAYG,KAAZ,GAAoB,MAAKH,MAAL,CAAYG,KAAZ,IAAqB,EAAzC;AACA,UAAKH,MAAL,CAAYI,MAAZ,GAAqB,MAAKJ,MAAL,CAAYI,MAAZ,IAAsB,IAA3C;AAR6B;AAS9B;;;;+BAEUC,K,EAAO;AAChB,aAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCF,KAAhC,EAAuC,KAAKL,MAAL,CAAYC,IAAnD,EACFO,IADE,CACG,UAACC,OAAD,EAAa;AACjBA,QAAAA,OAAO,GAAGA,OAAO,CAACC,IAAR,EAAV;AACA,YAAMC,MAAM,GAAG,EAAf;AAFiB;AAAA;AAAA;;AAAA;AAGjB,+BAAmBF,OAAnB;AAAA,gBAAWG,IAAX;AAA4BD,YAAAA,MAAM,CAACE,IAAP,CAAY;AAAED,cAAAA,IAAI,EAAJA,IAAF;AAAQE,cAAAA,KAAK,EAAEF;AAAf,aAAZ;AAA5B;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIjB,eAAOD,MAAP;AACD,OANE,CAAP;AAOD;;;mCAEc;AACb,WAAKX,MAAL,CAAYA,MAAZ,GAAqB,EAArB;AACA,WAAKe,OAAL;AACD;;;;EAzBuCC,c;;;AA4B1CpB,oBAAoB,CAACqB,WAArB,GAAmC,4BAAnC","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk'\nimport './css/query-editor.css!'\n\nexport class IronDbCheckQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector)\n\n    this.scope = $scope\n    this.target.kind = this.target.kind || 'numeric'\n    this.target.target = this.target.target || ''\n    this.target.type = this.target.type || 'average'\n    this.target.alias = this.target.alias || ''\n    this.target.extend = this.target.extend || true\n  }\n\n  getOptions(query) {\n    return this.datasource.metricFindQuery(query, this.target.kind)\n        .then((metrics) => {\n          metrics = metrics.sort()\n          const result = []\n          for (const text of metrics) result.push({ text, value: text })\n          return result\n        })\n  }\n\n  onChangeKind() {\n    this.target.target = ''\n    this.refresh()\n  }\n}\n\nIronDbCheckQueryCtrl.templateUrl = 'partials/query.editor.html'\n\n"],"file":"query_ctrl.js"}